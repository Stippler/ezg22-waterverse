#version 450 core

layout (local_size_x = 1, local_size_y = 1) in;
layout (binding = 0, rg32f) uniform readonly image2D imgInput;
layout (binding = 1, rg32f) uniform writeonly image2D imgOutput;

uniform vec2 delta;

void main() {
  float x = float(texelCoord.x) / gl_NumWorkGroups.x;
  float y = float(texelCoord.y) / gl_NumWorkGroups.y;
  vec2 coord = vec2(x, y);

      /* get vertex info */
  vec4 info = texture2D(imgInput, coord);

      /* update the normal */
  vec3 dx = vec3(delta.x, texture2D(imgInput, vec2(coord.x + delta.x, coord.y)).r - info.r, 0.0);
  vec3 dy = vec3(0.0, texture2D(imgInput, vec2(coord.x, coord.y + delta.y)).r - info.r, delta.y);
  info.ba = normalize(cross(dy, dx)).xz;

  imageStore(imgOutput, coord, info);
}