#version 450 core

layout(local_size_x = 1, local_size_y = 1) in;
layout(binding = 0, rgba32f) uniform readonly image2D imgInput;
layout(binding = 1, rgba32f) uniform writeonly image2D imgOutput;

void main() {
  /* get vertex info */
  ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
  vec4 info = imageLoad(imgInput, texelCoord);

  /* calculate average neighbor height */
  ivec3 offset = ivec3(1, 1, 0);
  float hL = imageLoad(imgInput, texelCoord-offset.xz).x;
  float hR = imageLoad(imgInput, texelCoord+offset.xz).x;
  float hD = imageLoad(imgInput, texelCoord-offset.zy).x;
  float hU = imageLoad(imgInput, texelCoord+offset.zy).x;
  float average = (hL+hR+hD+hU)/4;

  /* change the velocity to move toward the average */
  info.y += (average - info.x) * 2.0;

  /* attenuate the velocity a little so waves do not last forever */
  info.y *= 0.95;

  /* move the vertex along the velocity */
  info.x += info.y;

  imageStore(imgOutput, texelCoord, info);
}